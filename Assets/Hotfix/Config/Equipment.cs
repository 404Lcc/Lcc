
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Equipment : Luban.BeanBase
{
    public Equipment(JSONNode _buf) 
    {
        { if(!_buf["id"].IsNumber) { throw new SerializationException(); }  Id = _buf["id"]; }
        { if(!_buf["equipmentName"].IsString) { throw new SerializationException(); }  EquipmentName = _buf["equipmentName"]; }
        { if(!_buf["equipmentType"].IsNumber) { throw new SerializationException(); }  EquipmentType = (EquipmentType)_buf["equipmentType"].AsInt; }
        { if(!_buf["btScript"].IsString) { throw new SerializationException(); }  BtScript = _buf["btScript"]; }
    }

    public static Equipment DeserializeEquipment(JSONNode _buf)
    {
        return new Equipment(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public readonly int Id;
    /// <summary>
    /// 装备名称
    /// </summary>
    public readonly string EquipmentName;
    /// <summary>
    /// 装备类型
    /// </summary>
    public readonly EquipmentType EquipmentType;
    /// <summary>
    /// 行为树脚本
    /// </summary>
    public readonly string BtScript;
   
    public const int __ID__ = -1214642834;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + Id + ","
        + "equipmentName:" + EquipmentName + ","
        + "equipmentType:" + EquipmentType + ","
        + "btScript:" + BtScript + ","
        + "}";
    }
}

}
