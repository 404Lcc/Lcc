
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using SimpleJSON;


namespace cfg
{
public sealed partial class Panel : Luban.BeanBase
{
    public Panel(JSONNode _buf) 
    {
        { if(!_buf["prefabName"].IsString) { throw new SerializationException(); }  PrefabName = _buf["prefabName"]; }
        { if(!_buf["depth"].IsNumber) { throw new SerializationException(); }  Depth = _buf["depth"]; }
        { if(!_buf["rootName"].IsString) { throw new SerializationException(); }  RootName = _buf["rootName"]; }
        { if(!_buf["logicName"].IsString) { throw new SerializationException(); }  LogicName = _buf["logicName"]; }
        { if(!_buf["bgTex"].IsString) { throw new SerializationException(); }  BgTex = _buf["bgTex"]; }
        { if(!_buf["sound"].IsNumber) { throw new SerializationException(); }  Sound = _buf["sound"]; }
        { if(!_buf["openAnim"].IsBoolean) { throw new SerializationException(); }  OpenAnim = _buf["openAnim"]; }
        { if(!_buf["showScreenMask"].IsNumber) { throw new SerializationException(); }  ShowScreenMask = _buf["showScreenMask"]; }
        { if(!_buf["windowFlag"].IsNumber) { throw new SerializationException(); }  WindowFlag = _buf["windowFlag"]; }
        { if(!_buf["rejectFlag"].IsNumber) { throw new SerializationException(); }  RejectFlag = _buf["rejectFlag"]; }
        { if(!_buf["escapeType"].IsNumber) { throw new SerializationException(); }  EscapeType = _buf["escapeType"]; }
        { if(!_buf["releaseType"].IsNumber) { throw new SerializationException(); }  ReleaseType = _buf["releaseType"]; }
        { if(!_buf["returnNodeType"].IsNumber) { throw new SerializationException(); }  ReturnNodeType = _buf["returnNodeType"]; }
        { if(!_buf["returnNodeName"].IsString) { throw new SerializationException(); }  ReturnNodeName = _buf["returnNodeName"]; }
        { if(!_buf["returnNodeParam"].IsNumber) { throw new SerializationException(); }  ReturnNodeParam = _buf["returnNodeParam"]; }
    }

    public static Panel DeserializePanel(JSONNode _buf)
    {
        return new Panel(_buf);
    }

    /// <summary>
    /// 资源名
    /// </summary>
    public readonly string PrefabName;
    /// <summary>
    /// 层级
    /// </summary>
    public readonly int Depth;
    /// <summary>
    /// 根节点名
    /// </summary>
    public readonly string RootName;
    /// <summary>
    /// 节点逻辑名
    /// </summary>
    public readonly string LogicName;
    /// <summary>
    /// 背景图
    /// </summary>
    public readonly string BgTex;
    /// <summary>
    /// 窗口音乐
    /// </summary>
    public readonly int Sound;
    /// <summary>
    /// 打开窗口是否播放动画
    /// </summary>
    public readonly bool OpenAnim;
    /// <summary>
    /// 打开时显示一个黑色的遮罩
    /// </summary>
    public readonly int ShowScreenMask;
    /// <summary>
    /// 窗口类型
    /// </summary>
    public readonly int WindowFlag;
    /// <summary>
    /// 窗口互斥类型
    /// </summary>
    public readonly int RejectFlag;
    /// <summary>
    /// 回退响应类型
    /// </summary>
    public readonly int EscapeType;
    /// <summary>
    /// 释放类型
    /// </summary>
    public readonly int ReleaseType;
    /// <summary>
    /// 返回节点类型
    /// </summary>
    public readonly int ReturnNodeType;
    /// <summary>
    /// 返回节点名称
    /// </summary>
    public readonly string ReturnNodeName;
    /// <summary>
    /// 返回节点参数
    /// </summary>
    public readonly int ReturnNodeParam;
   
    public const int __ID__ = 76880356;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "prefabName:" + PrefabName + ","
        + "depth:" + Depth + ","
        + "rootName:" + RootName + ","
        + "logicName:" + LogicName + ","
        + "bgTex:" + BgTex + ","
        + "sound:" + Sound + ","
        + "openAnim:" + OpenAnim + ","
        + "showScreenMask:" + ShowScreenMask + ","
        + "windowFlag:" + WindowFlag + ","
        + "rejectFlag:" + RejectFlag + ","
        + "escapeType:" + EscapeType + ","
        + "releaseType:" + ReleaseType + ","
        + "returnNodeType:" + ReturnNodeType + ","
        + "returnNodeName:" + ReturnNodeName + ","
        + "returnNodeParam:" + ReturnNodeParam + ","
        + "}";
    }
}

}
